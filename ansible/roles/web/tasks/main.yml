---

- name: Setup Web directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: "0755"
  loop:
    - /var/lib/traefik
    - /var/lib/traefik/certs
    - /etc/traefik/
    - /etc/traefik/containers
    - /etc/traefik/containers/fallback

- name: Copy traefik.yaml
  ansible.builtin.template:
    src: traefik.yaml
    dest: /etc/traefik/traefik.yaml
    owner: root
    group: root
    mode: "0644"
  notify: Restart docker compose

- name: Copy fallback files
  ansible.builtin.copy:
    src: fallback/{{ item }}
    dest: /etc/traefik/containers/fallback/{{ item }}
    owner: root
    group: root
    mode: "0644"
  loop:
    - Dockerfile
    - userdir2.conf
  notify: Restart docker compose

- name: Add grafana group
  ansible.builtin.group:
    name: grafana
    gid: "{{ grafana.gid }}"

- name: Add prometheus user
  ansible.builtin.user:
    name: grafana
    uid: "{{ grafana.uid }}"
    group: prometheus

- name: Create /etc/grafana
  ansible.builtin.file:
    path: /etc/grafana
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Copy grafana filels
  ansible.builtin.template:
    src: grafana.ini
    dest: /etc/grafana/grafana.ini
    owner: grafana
    group: grafana
    mode: "0600"

- name: Copy docker-compose.yml
  ansible.builtin.template:
    src: docker-compose.yml
    dest: /etc/traefik/containers/docker-compose.yml
    group: root
    owner: root
    mode: "0600"
  notify: Restart docker compose

- name: Install python3-docker
  ansible.builtin.apt:
    name:
      - python3-docker
      - docker-compose

- name: Enable docker compose
  community.docker.docker_compose_v2:
    project_src: /etc/traefik/containers
    build: always
    remove_orphans: true
  notify: Restart docker compose

- name: Allow HTTP
  community.general.ufw:
    rule: allow
    port: 80
    proto: tcp
  notify: Reload ufw

- name: Allow HTTPS
  community.general.ufw:
    rule: allow
    port: 443
    proto: tcp
  notify: Reload ufw
